=== Instalacja Git

Zanim zaczniesz używać Gita, musisz sprawić, aby był on dostępny na Twoim komputerze.
Nawet, jeśli Git jest już zainstalowany, dobrym pomysłem jest uaktualnienie go do najnowszej wersji.
Możesz zainstalować Gita z paczki, używając instalatora lub ściągnąć kod źródłowy i samodzielnie skompilować.

[NOTE]
====
Książka została napisana przy użyciu Gita w wersji *2.0.0*.
Większość używanych tutaj poleceń, może działać nawet w starszej wersji, lecz niektóre z nich nie muszą lub mogę działać trochę odmiennie. Git ma doskonałą kompatybilność wsteczną, każda wersja po 2.0 powinna działać poprawnie.
====

==== Instalacja - Linux

(((Linux, installing)))
Jeśli chcesz zainstalować Gita w systemie Linux z wykorzystaniem pakietów binarnych, możesz to zrobić w standardowy sposób przy użyciu narzędzi do zarządzania pakietami, specyficznych dla danej dystrybucji. Jeśli korzystasz z Fedory (lub podobnej dystrybucji związanej z pakietami RPM, jak RHEL i CentOS), możesz użyć narzędzia `dnf` (w starszych wersjach `yum`):

[source,console]
----
$ sudo dnf install git-all
----

Jeśli korzystasz z dystrybucji opartej na Debianie, jak Ubuntu, użyj `apt` (w starszych wersjach `apt-get`):

[source,console]
----
$ sudo apt install git-all
----

Wiecej opcji oraz instrukcje instalacji dla różnych systemów Unixowych znajdziesz na stronie Gita: http://git-scm.com/download/linux[].

==== Instalacja - Mac

(((Mac, installing)))
Jest kilka sposobów na instalację Gita w systemie Mac. Najłatwiejszym jest instalacja narzędzi tekstowych Xcode. Na Mavericks (10.9) lub nowszej wersji możesz to zrobić uruchamiając Gita w Terminalu.

[source,console]
----
$ git --version
----

Jeśli nie jest jeszcze zainstalowany, zostaniesz zapytany o to, czy chcesz przeprowadzić instalację.

Jeśli chcesz mieć najbardziej aktualną wersję możesz dokonać instalacji za pomocą instalatora. Instalator Gita dla OSX jest dostępny do pobrania na stronie: http://git-scm.com/download/mac[].

.Git OS X Instalator
image::images/git-osx-installer.png[Git OS X Instalator]

Możesz również zainstalować Gita jako część GitHuba. To narzędzie graficzne ma również opcję instalacji narzędzi tekstowych. Możesz je pobrać ze strony: http://mac.github.com[].

==== Instalacja - Windows

W systemie Windows również jest wiele sposobów instalacji Gita. Oficjalna wersja jest dostępna do pobrania na stronie: http://git-scm.com/download/win[]. Przejdź tam, a pobieranie rozpocznie się automatycznie. Zauważ, że ten projekt nosi nazwę "Git for Windows" (również msysGit), który jest oddzielony od samego Gita; więcej informacji na ten temat znajdziesz pod adresem https://git-for-windows.github.io/[].

Aby automatycznie zainstalować Git, możesz użyć https://chocolatey.org/packages/git[Git Chocolatey package].

Innym łatwym sposobem jest instalacja GitHuba dla Windows. Instalator zawiera zarówno interfejs tekstowy jak i graficzny. Równie dobrze działa w połączeniu z Powershellem i daje solidne poświadczenia buforowania oraz ustawienia CRLF. Możesz pobrać GitHub dla Windows ze strony http://windows.github.com[].

==== Instalacja ze żródeł

Jeśli masz taką możliwość, korzystne jest zainstalowanie Gita ze źródeł, ponieważ w ten sposób dostajesz najnowszą wersję. Każda wersja Gita zawiera zwykle użyteczne zmiany w interfejsie, zatem chęć skorzystania z najnowszych funkcji stanowi zwykle najlepszy powód by skompilować samodzielnie własną wersję Gita. Jest to istotne także z tego powodu, że wiele dystrybucji Linuksa posiada starsze wersje pakietów. Zatem jeśli nie korzystasz z najświeższej dystrybucji, albo nie aktualizujesz jej nowszymi pakietami, instalacja ze źródeł to najlepsza metoda.

Aby zainstalować Gita, potrzebne są następujące biblioteki: `curl`, `zlib`, `openssl`, `expat` oraz `libiconv`. Na przykład, jeśli korzystasz z systemu, który posiada narzędzie `dnf` (jak Fedora) lub `apt-get` (system oparty na Debianie), możesz skorzystać z następujących poleceń w celu instalacji:

[source,console]
----
$ sudo dnf install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel
$ sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev
----

Aby umożliwić dodawanie dokumentacji w różnych formatach (doc, html, info), potrzebne są dodatkowe zależności. (Uwaga: uzytkownicy systemów RHEL-owych jak CentOS i Scientific Linux muszą https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[włączyć repozytorium EPEL])

[source,console]
----
$ sudo dnf install asciidoc xmlto docbook2X
$ sudo apt-get install asciidoc xmlto docbook2x
----

Jeśli używasz dystrybucji opartej na Debianie, musisz dodatkowo zainstalować paczkę `install-info`:

[source,console]
----
$ sudo apt-get install install-info
----

Jesli używać dystrybucki opartej o RPMy (Fedora, RHEL), musisz dodatkowo zainstalować paczkę `getopt`:

[source,console]
----
$ sudo dnf install getopt
$ sudo apt-get install getopt
----

Dodatkowo, jeśli uzywasz dystrybucji z RPMami (Fedora, RHEL), musisz wykonać polecenie:

[source,console]
----
$ sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
----

Gdy wszystkie wymagane zależności zostaną zainstalowane, możesz pobrać najnowszą wersję Gita.
Mozesz to zrobić poprzez stronę https://www.kernel.org/pub/software/scm/git[Kernel.org] lub https://github.com/git/git/releases[GitHub].

Następnie skompiluj i zainstaluj Gita:

[source,console]
----
$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
----

Po instalacji, możesz pobierać Gita za pomocą Gita (na przykład w celu aktualizacji):

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
----
